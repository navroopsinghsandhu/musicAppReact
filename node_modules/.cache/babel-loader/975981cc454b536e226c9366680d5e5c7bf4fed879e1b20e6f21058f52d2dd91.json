{"ast":null,"code":"var _jsxFileName = \"/Users/apple/musicapp/src/QueryArea.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Footer from './Footer';\nimport Music from './Music';\nimport { API_HOST } from './constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction QueryArea() {\n  _s();\n  function createMusic(music) {\n    return /*#__PURE__*/_jsxDEV(Music, {\n      MusicId: music.MusicId,\n      MusicTitle: music.title,\n      Year: music.year,\n      WebUrl: music.web_url,\n      ArtistImage: music.image_url,\n      isSubscribed: false\n    }, music.MusicId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 11\n    }, this);\n  }\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    fetch(API_HOST + \"/music\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        ProductId: props.ProductId,\n        UserId: localStorage.getItem('token')\n      })\n    }).then(res => res.json()).then(data => {\n      setData(data);\n      console.log(data);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  // title, year and artist\n  fetch(API_HOST + \"/productuser\", {\n    method: \"POST\",\n    body: JSON.stringify({\n      ProductId: props.ProductId,\n      UserId: localStorage.getItem('token') // Gets user id from local storage token\n    })\n  });\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Music based on your query\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), data.map(createMusic)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n_s(QueryArea, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = QueryArea;\nexport default QueryArea;\nvar _c;\n$RefreshReg$(_c, \"QueryArea\");","map":{"version":3,"names":["React","useState","useEffect","Footer","Music","API_HOST","jsxDEV","_jsxDEV","QueryArea","_s","createMusic","music","MusicId","MusicTitle","title","Year","year","WebUrl","web_url","ArtistImage","image_url","isSubscribed","fileName","_jsxFileName","lineNumber","columnNumber","data","setData","fetch","method","body","JSON","stringify","ProductId","props","UserId","localStorage","getItem","then","res","json","console","log","catch","err","children","map","_c","$RefreshReg$"],"sources":["/Users/apple/musicapp/src/QueryArea.js"],"sourcesContent":["import React ,{useState, useEffect} from 'react';\nimport Footer from './Footer';\nimport Music from './Music';\nimport { API_HOST } from './constants';\n\nfunction QueryArea() {\n\n    function createMusic(music) {\n        return (\n          <Music\n            key={music.MusicId}\n            MusicId={music.MusicId}\n            MusicTitle={music.title}\n            Year={music.year}\n            WebUrl={music.web_url}\n            ArtistImage={music.image_url}\n            isSubscribed = {false}\n          />\n        );\n    }\n\n    const [data, setData] = useState([]);\n\n    useEffect(() => {\n        fetch(API_HOST + \"/music\", {\n            method: \"POST\",\n            body: JSON.stringify({\n              ProductId: props.ProductId,\n              UserId: localStorage.getItem('token')  \n            }),\n        })\n        .then((res) => res.json())\n        .then((data) => {\n            setData(data);\n            console.log(data)\n        })\n        .catch((err) => {\n            console.log(err);\n        });\n    }, []);\n    // title, year and artist\n    fetch(API_HOST + \"/productuser\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          ProductId: props.ProductId,\n          UserId: localStorage.getItem('token')  // Gets user id from local storage token\n        }),\n      });\n\n    return (\n\n        <div>\n            <div>\n                <div>Music based on your query</div>\n                {data.map(createMusic)}\n            </div>\n            <Footer />\n        </div>\n    \n        );\n\n}\n\nexport default QueryArea;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,KAAK,MAAM,SAAS;AAC3B,SAASC,QAAQ,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAEjB,SAASC,WAAWA,CAACC,KAAK,EAAE;IACxB,oBACEJ,OAAA,CAACH,KAAK;MAEJQ,OAAO,EAAED,KAAK,CAACC,OAAQ;MACvBC,UAAU,EAAEF,KAAK,CAACG,KAAM;MACxBC,IAAI,EAAEJ,KAAK,CAACK,IAAK;MACjBC,MAAM,EAAEN,KAAK,CAACO,OAAQ;MACtBC,WAAW,EAAER,KAAK,CAACS,SAAU;MAC7BC,YAAY,EAAI;IAAM,GANjBV,KAAK,CAACC,OAAO;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAOlB;EAER;EAEA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EAEpCC,SAAS,CAAC,MAAM;IACZ0B,KAAK,CAACvB,QAAQ,GAAG,QAAQ,EAAE;MACvBwB,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBC,SAAS,EAAEC,KAAK,CAACD,SAAS;QAC1BE,MAAM,EAAEC,YAAY,CAACC,OAAO,CAAC,OAAO;MACtC,CAAC;IACL,CAAC,CAAC,CACDC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,EAAE,CAAC,CACzBF,IAAI,CAAEZ,IAAI,IAAK;MACZC,OAAO,CAACD,IAAI,CAAC;MACbe,OAAO,CAACC,GAAG,CAAChB,IAAI,CAAC;IACrB,CAAC,CAAC,CACDiB,KAAK,CAAEC,GAAG,IAAK;MACZH,OAAO,CAACC,GAAG,CAACE,GAAG,CAAC;IACpB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EACN;EACAhB,KAAK,CAACvB,QAAQ,GAAG,cAAc,EAAE;IAC7BwB,MAAM,EAAE,MAAM;IACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACnBC,SAAS,EAAEC,KAAK,CAACD,SAAS;MAC1BE,MAAM,EAAEC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAE;IACzC,CAAC;EACH,CAAC,CAAC;;EAEJ,oBAEI9B,OAAA;IAAAsC,QAAA,gBACItC,OAAA;MAAAsC,QAAA,gBACItC,OAAA;QAAAsC,QAAA,EAAK;MAAyB;QAAAvB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM,EACnCC,IAAI,CAACoB,GAAG,CAACpC,WAAW,CAAC;IAAA;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACpB,eACNlB,OAAA,CAACJ,MAAM;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACR;AAId;AAAChB,EAAA,CAxDQD,SAAS;AAAAuC,EAAA,GAATvC,SAAS;AA0DlB,eAAeA,SAAS;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}