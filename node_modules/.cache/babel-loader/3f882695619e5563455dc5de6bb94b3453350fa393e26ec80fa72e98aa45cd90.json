{"ast":null,"code":"var _jsxFileName = \"/Users/apple/musicapp/src/Music.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\nimport { API_HOST } from './constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Music(props) {\n  _s();\n  const [addedFlag, setaddedFlag] = useState(false);\n  function addToCart() {\n    setaddedFlag(true);\n    fetch(API_HOST + \"/musicuser\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        MusicId: props.MusicId,\n        UserId: localStorage.getItem('token') // Gets user id from local storage token\n      })\n    });\n  }\n\n  if (localStorage.getItem('token') != null) {\n    fetch(API_HOST + \"/musicusercheck/\" + localStorage.getItem('token') + \"/\" + props.MusicId).then(res => res.json()).then(data => {\n      console.log(data.isAdded == \"True\");\n      setTimeout(() => {\n        if (data.isAdded == \"True\") {\n          setaddedFlag(true);\n        }\n      }, 100);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"music\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"top\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"circle-img\",\n          src: props.ArtistImage,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"name\",\n          children: props.MusicTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bottom\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"info\",\n          children: [\"Year\", props.Year]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: props.MusicId,\n          className: \"remove_button\",\n          style: {\n            marginLeft: 10,\n            padding: 5\n          },\n          onClick: e => {\n            props.removeMusic(e.target.id);\n          },\n          children: \" Remove \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 18\n        }, this), \" : \\\"\\\"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(Music, \"DpVb8b8y1y1K4856oK/sMKiChs0=\");\n_c = Music;\nfunction displayMessage() {\n  alert(\"Music Message\");\n}\nexport default Music;\nvar _c;\n$RefreshReg$(_c, \"Music\");","map":{"version":3,"names":["React","useState","API_HOST","jsxDEV","_jsxDEV","Music","props","_s","addedFlag","setaddedFlag","addToCart","fetch","method","body","JSON","stringify","MusicId","UserId","localStorage","getItem","then","res","json","data","console","log","isAdded","setTimeout","children","className","src","ArtistImage","alt","fileName","_jsxFileName","lineNumber","columnNumber","MusicTitle","Year","id","style","marginLeft","padding","onClick","e","removeMusic","target","_c","displayMessage","alert","$RefreshReg$"],"sources":["/Users/apple/musicapp/src/Music.js"],"sourcesContent":["import React from 'react';\r\nimport { useState } from 'react';\r\nimport { API_HOST } from './constants';\r\n\r\nfunction Music(props) {\r\n    const [addedFlag, setaddedFlag] = useState(false)\r\n    function addToCart(){\r\n        setaddedFlag(true)\r\n        fetch(API_HOST + \"/musicuser\", {\r\n              method: \"POST\",\r\n              body: JSON.stringify({\r\n                MusicId: props.MusicId,\r\n                UserId: localStorage.getItem('token')  // Gets user id from local storage token\r\n              }),\r\n            });\r\n    }\r\n\r\n    if(localStorage.getItem('token') != null){\r\n        fetch(API_HOST + \"/musicusercheck/\" + localStorage.getItem('token') + \"/\" + props.MusicId)\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            console.log(data.isAdded == \"True\")\r\n            setTimeout(()=>{\r\n                if(data.isAdded == \"True\"){\r\n                    setaddedFlag(true)\r\n                }\r\n            }, 100)\r\n        \r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n\r\n    <div>\r\n        <div className=\"music\">\r\n            <div className=\"top\">\r\n                <img className=\"circle-img\" src={props.ArtistImage} alt=\"\" />\r\n                <h2 className=\"name\">{props.MusicTitle}</h2>\r\n            </div>\r\n            <div className=\"bottom\">\r\n                <p className=\"info\">Year{props.Year}</p>\r\n                {/* <p className=\"info\">{props.key}</p>; */}\r\n\r\n                {/* { localStorage.getItem(\"role\") == 'customer'  || localStorage.getItem(\"role\") == 'member' ? <button className=\"add_to_cart_btn\" style={{padding:10}} onClick={addedFlag ? null :addToCart}>{addedFlag ? \"Added\" : \"Add to Cart\"}</button> : \"\"} */}\r\n                 <button id ={props.MusicId} className='remove_button' style={{marginLeft:10, padding:5}} onClick={(e) =>{props.removeMusic(e.target.id)}}> Remove </button> : \"\"\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    );\r\n}\r\n\r\n\r\nfunction displayMessage(){\r\n    alert(\"Music Message\")\r\n}\r\nexport default Music;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}